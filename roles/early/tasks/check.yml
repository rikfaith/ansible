---
- name: Determine local username
  become: false
  local_action: command whoami
  register: localuser

- name: Remove possibly old host key by name
  become: true
  become_user: "{{ localuser.stdout }}"
  local_action: command ssh-keygen -f ~/.ssh/known_hosts -R {{ inventory_hostname }}

- name: Get IP of remote hose
  become: true
  become_user: "{{ localuser.stdout }}"
  local_action: shell host {{ inventory_hostname }} | gawk '{print $4}'
  register: remote_ip

- debug: msg="IP of {{ inventory_hostname }} = {{ remote_ip.stdout }}"

- name: Remove possibly old host key by IP
  become: true
  become_user: "{{ localuser.stdout }}"
  local_action: command ssh-keygen -f ~/.ssh/known_hosts -R {{ remote_ip.stdout }}

- name: Get new host keys
  become: true
  become_user: "{{ localuser.stdout }}"
  local_action: command ssh-keyscan -p {{ ansible_port }} {{ inventory_hostname }}
  register: hostkeys

- name: Write new host keys to known hosts
  become: true
  become_user: "{{ localuser.stdout }}"
  local_action: lineinfile dest="~/.ssh/known_hosts" line="{{ item }}"
  with_items: "{{ hostkeys.stdout_lines }}"

- name: Configure for sudo
  set_fact: become_method=sudo
  set_fact: ansible_become_method=sudo

- name: Test become using sudo
  command: whoami
  register: command_output
  ignore_errors: true

- name: Use su
  set_fact: become_method=su
  set_fact: ansible_become_method=su
  when: command_output is not defined or
        command_output.rc is not defined or
        command_output.rc != 0

- name: Print methods
  debug: msg="{{ ansible_host }}:{{ ansible_port }} with {{ ansible_become_method }}"

- name: Test become
  command: whoami
